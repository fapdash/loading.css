N = 10
max = 1.3
ratio = 0.8
initP = 30

@keyframes rubber
  0%
    transform: scaleX(1) 
  {initP * 1%}
    transform: scaleX(max)
  for num in (1..(N - 1))
    value = 1 + (max - 1) * (ratio ** (num - 1)) * (-1 ** (num))
    {(initP + num * (100 - initP) / N) * 1%}
      transform: scaleX(value)
  100%
    transform: scaleX(1)

N = 10
max = 45deg
ratio = 0.8
initP = 30

@keyframes tick
  0%
    transform: rotate(0deg) 
  {initP * 1%}
    transform: rotate(max)
  for num in (1..(N - 1))
    value = (max) * (ratio ** (num - 1)) * (-1 ** (num))
    {(initP + num * (100 - initP) / N) * 1%}
      transform: rotate(value * 1deg)
  100%
    transform: rotate(0deg)


N = 10
max = 10px
ratio = 0.8
initP = 30

@keyframes oscillate
  0%
    transform: translate(0,0) 
  {initP * 1%}
    transform: translate(0,max)
  for num in (1..(N - 1))
    value = (max) * (ratio ** (num - 1)) * (-1 ** (num))
    {(initP + num * (100 - initP) / N) * 1%}
      transform: translate(0,value)
  100%
    transform: translate(0,0) 

N = 10
max = 20deg
ratio = 0.8
initP = 30

@keyframes skewx
  0%
    transform: skewX(0) 
  {initP * 1%}
    transform: skewX(max)
  for num in (1..(N - 1))
    value = (max) * (ratio ** (num - 1)) * (-1 ** (num))
    {(initP + num * (100 - initP) / N) * 1%}
      transform: skewX(value)
  100%
    transform: skewX(0) 

N = 5
max = 45deg
ratio = 0.8
initP = 30

@keyframes turn
  0%
    transform: rotateY(0) 
  {initP * 1%}
    transform: rotateY(max)
  for num in (1..(N - 1))
    value = (max) * (ratio ** (num - 1)) * (-1 ** (num))
    {(initP + num * (100 - initP) / N) * 1%}
      transform: rotateY(value)
  100%
    transform: rotateY(0) 
